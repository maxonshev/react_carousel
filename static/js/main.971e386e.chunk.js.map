{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","_ref","images","_ref$itemWidth","itemWidth","_ref$frameSize","frameSize","_ref$step","step","_ref$animationDuratio","animationDuration","_ref$infinite","infinite","_useState","useState","_useState2","_slicedToArray","offset","setOffset","maxOffset","length","_jsxs","className","style","width","children","_jsx","transform","concat","transition","map","image","index","src","alt","toString","type","cn","onClick","Math","max","disabled","difference","min","App","_React$Component","_inherits","_super","_createSuper","_this","_classCallCheck","_len","arguments","args","Array","_key","call","apply","state","handleInfiniteToggle","e","setState","target","checked","handleChange","_e$target","name","value","prevState","_objectSpread","_defineProperty","parseInt","_createClass","key","_this$state","this","htmlFor","id","onChange","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.971e386e.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './Carousel.scss';\nimport cn from 'classnames';\n\ninterface Props {\n  images: string[];\n  itemWidth: number;\n  frameSize: number;\n  step: number;\n  animationDuration: number;\n  infinite: boolean;\n}\n\nconst Carousel: React.FC<Props> = ({\n  images,\n  itemWidth = 130,\n  frameSize = 3,\n  step = 3,\n  animationDuration = 1000,\n  infinite = false,\n}) => {\n  const [offset, setOffset] = useState(0);\n\n  const maxOffset = images.length - frameSize;\n\n  const handleNextClick = () => {\n    const difference = frameSize - step;\n\n    if (infinite && offset + step >= images.length - difference) {\n      setOffset(0);\n    } else {\n      setOffset(Math.min(offset + step, maxOffset));\n    }\n  };\n\n  const handlePrevClick = () => {\n    if (infinite && offset - step < 0) {\n      setOffset(maxOffset);\n    } else {\n      setOffset(Math.max(offset - step, 0));\n    }\n  };\n\n  return (\n    <div className=\"Carousel\" style={{ width: itemWidth * frameSize }}>\n      <ul\n        className=\"Carousel__list\"\n        style={{\n          transform: `translateX(-${offset * itemWidth}px)`,\n          transition: `transform ${animationDuration}ms ease`,\n        }}\n      >\n        {images.map((image, index) => (\n          <li key={image}>\n            <img\n              src={image}\n              alt={index.toString()}\n              className=\"Carousel__image\"\n              style={{ width: itemWidth }}\n            />\n          </li>\n        ))}\n      </ul>\n\n      <div className=\"Carousel__buttons\">\n        <button\n          type=\"button\"\n          className={cn('button', {\n            'button--disabled': offset === 0 && !infinite,\n          })}\n          onClick={handlePrevClick}\n          disabled={offset === 0 && !infinite}\n          data-cy=\"prev\"\n        >\n          &lt;\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button', {\n            'button--disabled': offset >= maxOffset && !infinite,\n          })}\n          onClick={handleNextClick}\n          disabled={offset >= maxOffset && !infinite}\n          data-cy=\"next\"\n        >\n          &gt;\n        </button>\n      </div>\n\n    </div>\n  );\n};\n\nexport default Carousel;\n","import React from 'react';\nimport './App.scss';\nimport Carousel from './components/Carousel';\n\ninterface State {\n  images: string[];\n  itemWidth: number;\n  frameSize: number;\n  step: number;\n  animationDuration: number;\n  infinite: boolean;\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    itemWidth: 130,\n    frameSize: 3,\n    step: 3,\n    animationDuration: 1000,\n    infinite: false,\n  };\n\n  handleInfiniteToggle = (e: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ infinite: e.target.checked });\n  };\n\n  handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = e.target;\n\n    this.setState(prevState => ({\n      ...prevState,\n      [name]: parseInt(value, 10),\n    }));\n  };\n\n  render() {\n    const {\n      images,\n      itemWidth,\n      frameSize,\n      step,\n      animationDuration,\n      infinite,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1 data-cy=\"title\">{`Carousel with ${images.length} images`}</h1>\n        <div className=\"inputs\">\n          <label htmlFor=\"itemId\">\n            Item Width:\n            <input\n              id=\"itemId\"\n              type=\"number\"\n              name=\"itemWidth\"\n              value={itemWidth}\n              min={130}\n              onChange={this.handleChange}\n            />\n          </label>\n\n          <label htmlFor=\"frameId\">\n            Frame Size:\n            <input\n              id=\"frameId\"\n              type=\"number\"\n              name=\"frameSize\"\n              value={frameSize}\n              min={1}\n              max={10}\n              onChange={this.handleChange}\n            />\n          </label>\n\n          <label htmlFor=\"stepId\">\n            Step:\n            <input\n              id=\"stepId\"\n              type=\"number\"\n              name=\"step\"\n              value={step}\n              onChange={this.handleChange}\n            />\n          </label>\n\n          <label>\n            Animation Duration:\n            <input\n              type=\"number\"\n              name=\"animationDuration\"\n              value={animationDuration}\n              onChange={this.handleChange}\n            />\n          </label>\n\n          <label>\n            Infinite:\n            <input\n              type=\"checkbox\"\n              checked={infinite}\n              onChange={this.handleInfiniteToggle}\n            />\n          </label>\n        </div>\n\n        <Carousel\n          images={images}\n          itemWidth={itemWidth}\n          frameSize={frameSize}\n          step={step}\n          animationDuration={animationDuration}\n          infinite={infinite}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}